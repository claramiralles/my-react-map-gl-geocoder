{"ast":null,"code":"var _jsxFileName = \"/Users/clara/Documents/empower_2.0/inspiration_code/my-react-map-gl-geocoder/src/App.js\";\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css';\nimport React, { useState, useRef, useCallback } from 'react';\nimport { render } from 'react-dom';\nimport MapGL from 'react-map-gl';\nimport Geocoder from 'react-map-gl-geocoder';\nconst MAPBOX_TOKEN = 'pk.eyJ1Ijoic21peWFrYXdhIiwiYSI6ImNqcGM0d3U4bTB6dWwzcW04ZHRsbHl0ZWoifQ.X9cvdajtPbs9JDMG-CMDsA'; //Netherlands country coordinates\n\nconst App = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 52.2129919,\n    longitude: 5.2793703,\n    zoom: 6\n  });\n  const geocoderContainerRef = useRef();\n  const mapRef = useRef();\n  const handleViewportChange = useCallback(newViewport => setViewport(newViewport), []); // if you are happy with Geocoder default settings, you can just use handleViewportChange directly\n\n  const handleGeocoderViewportChange = useCallback(newViewport => {\n    const geocoderDefaultOverrides = {\n      transitionDuration: 1000\n    };\n    return handleViewportChange({ ...newViewport,\n      ...geocoderDefaultOverrides\n    });\n  }, [handleViewportChange]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '40vh',\n      width: '600px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: geocoderContainerRef,\n    style: {\n      position: 'absolute',\n      top: 20,\n      left: 20,\n      zIndex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MapGL, Object.assign({\n    ref: mapRef\n  }, viewport, {\n    width: \"100%\",\n    height: \"100%\",\n    onViewportChange: handleViewportChange,\n    mapboxApiAccessToken: MAPBOX_TOKEN,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Geocoder, {\n    mapRef: mapRef,\n    containerRef: geocoderContainerRef,\n    onViewportChange: handleGeocoderViewportChange,\n    mapboxApiAccessToken: MAPBOX_TOKEN,\n    position: \"top-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })));\n};\n\nrender( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 8\n  }\n}), document.getElementById('root'));\nexport default App;","map":{"version":3,"sources":["/Users/clara/Documents/empower_2.0/inspiration_code/my-react-map-gl-geocoder/src/App.js"],"names":["React","useState","useRef","useCallback","render","MapGL","Geocoder","MAPBOX_TOKEN","App","viewport","setViewport","latitude","longitude","zoom","geocoderContainerRef","mapRef","handleViewportChange","newViewport","handleGeocoderViewportChange","geocoderDefaultOverrides","transitionDuration","height","width","position","top","left","zIndex","document","getElementById"],"mappings":";AAAA,OAAO,8BAAP;AACA,OAAO,mDAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,OAArD;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,MAAMC,YAAY,GAAG,8FAArB,C,CAEA;;AACA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AACvCU,IAAAA,QAAQ,EAAE,UAD6B;AAEvCC,IAAAA,SAAS,EAAE,SAF4B;AAGvCC,IAAAA,IAAI,EAAE;AAHiC,GAAD,CAAxC;AAKA,QAAMC,oBAAoB,GAAGZ,MAAM,EAAnC;AACA,QAAMa,MAAM,GAAGb,MAAM,EAArB;AACA,QAAMc,oBAAoB,GAAGb,WAAW,CAAEc,WAAD,IAAiBP,WAAW,CAACO,WAAD,CAA7B,EAA4C,EAA5C,CAAxC,CARgB,CAUhB;;AACA,QAAMC,4BAA4B,GAAGf,WAAW,CAC7Cc,WAAD,IAAiB;AACf,UAAME,wBAAwB,GAAG;AAAEC,MAAAA,kBAAkB,EAAE;AAAtB,KAAjC;AAEA,WAAOJ,oBAAoB,CAAC,EAC1B,GAAGC,WADuB;AAE1B,SAAGE;AAFuB,KAAD,CAA3B;AAID,GAR6C,EAS9C,CAACH,oBAAD,CAT8C,CAAhD;AAYA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAER,oBAAV;AAAgC,IAAA,KAAK,EAAE;AAAES,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,GAAG,EAAE,EAA7B;AAAiCC,MAAAA,IAAI,EAAE,EAAvC;AAA2CC,MAAAA,MAAM,EAAE;AAAnD,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEX;AADP,KAEMN,QAFN;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,MAAM,EAAC,MAJT;AAKE,IAAA,gBAAgB,EAAEO,oBALpB;AAME,IAAA,oBAAoB,EAAET,YANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAOE,oBAAC,QAAD;AACE,IAAA,MAAM,EAAEQ,MADV;AAEE,IAAA,YAAY,EAAED,oBAFhB;AAGE,IAAA,gBAAgB,EAAEI,4BAHpB;AAIE,IAAA,oBAAoB,EAAEX,YAJxB;AAKE,IAAA,QAAQ,EAAC,UALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAFF,CADF;AAoBD,CA3CD;;AA6CAH,MAAM,eAAC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAUuB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAV,CAAN;AAEA,eAAepB,GAAf","sourcesContent":["import 'mapbox-gl/dist/mapbox-gl.css'\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css'\nimport React, { useState, useRef, useCallback } from 'react'\nimport { render } from 'react-dom'\nimport MapGL from 'react-map-gl'\nimport Geocoder from 'react-map-gl-geocoder'\n\nconst MAPBOX_TOKEN = 'pk.eyJ1Ijoic21peWFrYXdhIiwiYSI6ImNqcGM0d3U4bTB6dWwzcW04ZHRsbHl0ZWoifQ.X9cvdajtPbs9JDMG-CMDsA'\n \n//Netherlands country coordinates\nconst App = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 52.2129919,\n    longitude: 5.2793703,\n    zoom: 6\n  })\n  const geocoderContainerRef = useRef()\n  const mapRef = useRef()\n  const handleViewportChange = useCallback((newViewport) => setViewport(newViewport), [])\n\n  // if you are happy with Geocoder default settings, you can just use handleViewportChange directly\n  const handleGeocoderViewportChange = useCallback(\n    (newViewport) => {\n      const geocoderDefaultOverrides = { transitionDuration: 1000 }\n\n      return handleViewportChange({\n        ...newViewport,\n        ...geocoderDefaultOverrides\n      })\n    },\n    [handleViewportChange]\n  )\n\n  return (\n    <div style={{ height: '40vh', width: '600px' }}>\n      <div ref={geocoderContainerRef} style={{ position: 'absolute', top: 20, left: 20, zIndex: 1 }} />\n      <MapGL\n        ref={mapRef}\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        onViewportChange={handleViewportChange}\n        mapboxApiAccessToken={MAPBOX_TOKEN}>\n        <Geocoder\n          mapRef={mapRef}\n          containerRef={geocoderContainerRef}\n          onViewportChange={handleGeocoderViewportChange}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n          position=\"top-left\"\n        />\n      </MapGL>\n    </div>\n  )\n}\n\nrender(<App />, document.getElementById('root'))\n\nexport default App"]},"metadata":{},"sourceType":"module"}