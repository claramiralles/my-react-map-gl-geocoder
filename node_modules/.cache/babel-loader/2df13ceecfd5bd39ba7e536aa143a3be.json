{"ast":null,"code":"import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport { FlyToInterpolator } from 'react-map-gl';\nimport WebMercatorViewport from 'viewport-mercator-project';\nimport mapboxgl from 'mapbox-gl';\nconst VALID_POSITIONS = ['top-left', 'top-right', 'bottom-left', 'bottom-right'];\n\nclass Geocoder extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.geocoder = null;\n    this.cachedResult = null;\n\n    this.initializeGeocoder = () => {\n      const mapboxMap = this.getMapboxMap();\n      const containerNode = this.getContainerNode();\n      const {\n        mapboxApiAccessToken,\n        inputValue,\n        origin,\n        zoom,\n        placeholder,\n        proximity,\n        trackProximity,\n        collapsed,\n        clearAndBlurOnEsc,\n        clearOnBlur,\n        bbox,\n        types,\n        countries,\n        minLength,\n        limit,\n        language,\n        filter,\n        localGeocoder,\n        reverseGeocode,\n        enableEventLogging,\n        marker,\n        render,\n        getItemValue,\n        onInit,\n        position\n      } = this.props;\n      const options = {\n        accessToken: mapboxApiAccessToken,\n        origin,\n        zoom,\n        flyTo: false,\n        placeholder,\n        proximity,\n        trackProximity,\n        collapsed,\n        clearAndBlurOnEsc,\n        clearOnBlur,\n        bbox,\n        types,\n        countries,\n        minLength,\n        limit,\n        language,\n        filter,\n        localGeocoder,\n        reverseGeocode,\n        enableEventLogging,\n        marker,\n        mapboxgl\n      };\n\n      if (render && typeof render === 'function') {\n        options.render = render;\n      }\n\n      if (getItemValue && typeof getItemValue === 'function') {\n        options.getItemValue = getItemValue;\n      }\n\n      this.geocoder = new MapboxGeocoder(options);\n      this.subscribeEvents();\n\n      if (containerNode) {\n        containerNode.appendChild(this.geocoder.onAdd(mapboxMap));\n      } else {\n        mapboxMap.addControl(this.geocoder, VALID_POSITIONS.find(_position => position === _position));\n      }\n\n      if (inputValue !== undefined && inputValue !== null) {\n        this.geocoder.setInput(inputValue);\n      } else if (this.cachedResult) {\n        this.geocoder.setInput(this.cachedResult.place_name);\n      }\n\n      if (this.cachedResult || inputValue !== undefined && inputValue !== null) {\n        this.showClearIcon();\n      }\n\n      onInit(this.geocoder);\n    };\n\n    this.showClearIcon = () => {\n      // this is a hack to force clear icon to show if there is text in the input\n      this.geocoder._clearEl.style.display = 'block';\n    };\n\n    this.getMapboxMap = () => {\n      const {\n        mapRef\n      } = this.props;\n      return mapRef && mapRef.current && mapRef.current.getMap() || null;\n    };\n\n    this.getContainerNode = () => {\n      const {\n        containerRef\n      } = this.props;\n      return containerRef && containerRef.current || null;\n    };\n\n    this.subscribeEvents = () => {\n      this.geocoder.on('clear', this.handleClear);\n      this.geocoder.on('loading', this.handleLoading);\n      this.geocoder.on('results', this.handleResults);\n      this.geocoder.on('result', this.handleResult);\n      this.geocoder.on('error', this.handleError);\n    };\n\n    this.unsubscribeEvents = () => {\n      this.geocoder.off('clear', this.handleClear);\n      this.geocoder.off('loading', this.handleLoading);\n      this.geocoder.off('results', this.handleResults);\n      this.geocoder.off('result', this.handleResult);\n      this.geocoder.off('error', this.handleError);\n    };\n\n    this.removeGeocoder = () => {\n      const mapboxMap = this.getMapboxMap();\n      this.unsubscribeEvents();\n\n      if (mapboxMap && mapboxMap.removeControl) {\n        this.getMapboxMap().removeControl(this.geocoder);\n      }\n\n      this.geocoder = null;\n    };\n\n    this.handleClear = () => {\n      this.cachedResult = null;\n      this.props.onClear();\n    };\n\n    this.handleLoading = event => {\n      this.props.onLoading(event);\n    };\n\n    this.handleResults = event => {\n      this.props.onResults(event);\n    };\n\n    this.handleResult = event => {\n      const {\n        result\n      } = event;\n      const {\n        onViewportChange,\n        onResult\n      } = this.props;\n      const {\n        bbox,\n        center,\n        properties = {}\n      } = result;\n      const {\n        short_code\n      } = properties;\n      const [longitude, latitude] = center;\n      const bboxExceptions = {\n        fr: {\n          name: 'France',\n          bbox: [[-4.59235, 41.380007], [9.560016, 51.148506]]\n        },\n        us: {\n          name: 'United States',\n          bbox: [[-171.791111, 18.91619], [-66.96466, 71.357764]]\n        },\n        ru: {\n          name: 'Russia',\n          bbox: [[19.66064, 41.151416], [190.10042, 81.2504]]\n        },\n        ca: {\n          name: 'Canada',\n          bbox: [[-140.99778, 41.675105], [-52.648099, 83.23324]]\n        }\n      };\n      const {\n        width,\n        height\n      } = this.getMapboxMap().getContainer().getBoundingClientRect();\n      let zoom = this.geocoder.options.zoom;\n\n      const fitBounds = (bounds, viewport) => new WebMercatorViewport(viewport).fitBounds(bounds);\n\n      try {\n        if (!bboxExceptions[short_code] && bbox) {\n          zoom = fitBounds([[bbox[0], bbox[1]], [bbox[2], bbox[3]]], {\n            width,\n            height\n          }).zoom;\n        } else if (bboxExceptions[short_code]) {\n          zoom = fitBounds(bboxExceptions[short_code].bbox, {\n            width,\n            height\n          }).zoom;\n        }\n      } catch (e) {\n        console.warn('following result caused an error when trying to zoom to bbox: ', result); // eslint-disable-line\n\n        zoom = this.geocoder.options.zoom;\n      }\n\n      onViewportChange({\n        longitude,\n        latitude,\n        zoom,\n        transitionInterpolator: new FlyToInterpolator(),\n        transitionDuration: 3000\n      });\n      onResult(event);\n      this.cachedResult = result;\n      this.geocoder._typeahead.selected = null;\n      this.showClearIcon();\n    };\n\n    this.handleError = event => {\n      this.props.onError(event);\n    };\n  }\n\n  componentDidMount() {\n    this.initializeGeocoder();\n  }\n\n  componentWillUnmount() {\n    this.removeGeocoder();\n  }\n\n  componentDidUpdate() {\n    this.removeGeocoder();\n    this.initializeGeocoder();\n  }\n\n  getGeocoder() {\n    return this.geocoder;\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nGeocoder.propTypes = {\n  mapRef: PropTypes.object.isRequired,\n  containerRef: PropTypes.object,\n  onViewportChange: PropTypes.func,\n  mapboxApiAccessToken: PropTypes.string.isRequired,\n  inputValue: PropTypes.string,\n  origin: PropTypes.string,\n  zoom: PropTypes.number,\n  placeholder: PropTypes.string,\n  proximity: PropTypes.object,\n  trackProximity: PropTypes.bool,\n  collapsed: PropTypes.bool,\n  clearAndBlurOnEsc: PropTypes.bool,\n  clearOnBlur: PropTypes.bool,\n  bbox: PropTypes.array,\n  types: PropTypes.string,\n  countries: PropTypes.string,\n  minLength: PropTypes.number,\n  limit: PropTypes.number,\n  language: PropTypes.string,\n  filter: PropTypes.func,\n  localGeocoder: PropTypes.func,\n  reverseGeocode: PropTypes.bool,\n  enableEventLogging: PropTypes.bool,\n  marker: PropTypes.bool,\n  render: PropTypes.func,\n  getItemValue: PropTypes.func,\n  position: PropTypes.oneOf(VALID_POSITIONS),\n  onInit: PropTypes.func,\n  onClear: PropTypes.func,\n  onLoading: PropTypes.func,\n  onResults: PropTypes.func,\n  onResult: PropTypes.func,\n  onError: PropTypes.func\n};\nGeocoder.defaultProps = {\n  onViewportChange: () => {},\n  origin: 'https://api.mapbox.com',\n  zoom: 16,\n  placeholder: 'Search',\n  trackProximity: false,\n  collapsed: false,\n  clearAndBlurOnEsc: false,\n  clearOnBlur: false,\n  minLength: 2,\n  limit: 5,\n  reverseGeocode: false,\n  enableEventLogging: true,\n  marker: true,\n  position: 'top-right',\n  onInit: () => {},\n  onClear: () => {},\n  onLoading: () => {},\n  onResults: () => {},\n  onResult: () => {},\n  onError: () => {}\n};\nexport default Geocoder;","map":{"version":3,"sources":["/Users/clara/Documents/empower_2.0/inspiration_code/my-react-map-gl-geocoder/src/index.js"],"names":["PureComponent","PropTypes","MapboxGeocoder","FlyToInterpolator","WebMercatorViewport","mapboxgl","VALID_POSITIONS","Geocoder","geocoder","cachedResult","initializeGeocoder","mapboxMap","getMapboxMap","containerNode","getContainerNode","mapboxApiAccessToken","inputValue","origin","zoom","placeholder","proximity","trackProximity","collapsed","clearAndBlurOnEsc","clearOnBlur","bbox","types","countries","minLength","limit","language","filter","localGeocoder","reverseGeocode","enableEventLogging","marker","render","getItemValue","onInit","position","props","options","accessToken","flyTo","subscribeEvents","appendChild","onAdd","addControl","find","_position","undefined","setInput","place_name","showClearIcon","_clearEl","style","display","mapRef","current","getMap","containerRef","on","handleClear","handleLoading","handleResults","handleResult","handleError","unsubscribeEvents","off","removeGeocoder","removeControl","onClear","event","onLoading","onResults","result","onViewportChange","onResult","center","properties","short_code","longitude","latitude","bboxExceptions","fr","name","us","ru","ca","width","height","getContainer","getBoundingClientRect","fitBounds","bounds","viewport","e","console","warn","transitionInterpolator","transitionDuration","_typeahead","selected","onError","componentDidMount","componentWillUnmount","componentDidUpdate","getGeocoder","propTypes","object","isRequired","func","string","number","bool","array","oneOf","defaultProps"],"mappings":"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","sourcesContent":["import { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder'\nimport { FlyToInterpolator } from 'react-map-gl'\nimport WebMercatorViewport from 'viewport-mercator-project'\nimport mapboxgl from 'mapbox-gl'\n\nconst VALID_POSITIONS = ['top-left', 'top-right', 'bottom-left', 'bottom-right']\n\nclass Geocoder extends PureComponent {\n  geocoder = null\n  cachedResult = null\n\n  componentDidMount() {\n    this.initializeGeocoder()\n  }\n\n  componentWillUnmount() {\n    this.removeGeocoder()\n  }\n\n  componentDidUpdate() {\n    this.removeGeocoder()\n    this.initializeGeocoder()\n  }\n\n  initializeGeocoder = () => {\n    const mapboxMap = this.getMapboxMap()\n    const containerNode = this.getContainerNode()\n    const {\n      mapboxApiAccessToken,\n      inputValue,\n      origin,\n      zoom,\n      placeholder,\n      proximity,\n      trackProximity,\n      collapsed,\n      clearAndBlurOnEsc,\n      clearOnBlur,\n      bbox,\n      types,\n      countries,\n      minLength,\n      limit,\n      language,\n      filter,\n      localGeocoder,\n      reverseGeocode,\n      enableEventLogging,\n      marker,\n      render,\n      getItemValue,\n      onInit,\n      position\n    } = this.props\n    const options = {\n      accessToken: mapboxApiAccessToken,\n      origin,\n      zoom,\n      flyTo: false,\n      placeholder,\n      proximity,\n      trackProximity,\n      collapsed,\n      clearAndBlurOnEsc,\n      clearOnBlur,\n      bbox,\n      types,\n      countries,\n      minLength,\n      limit,\n      language,\n      filter,\n      localGeocoder,\n      reverseGeocode,\n      enableEventLogging,\n      marker,\n      mapboxgl\n    }\n\n    if (render && typeof render === 'function') {\n      options.render = render\n    }\n\n    if (getItemValue && typeof getItemValue === 'function') {\n      options.getItemValue = getItemValue\n    }\n\n    this.geocoder = new MapboxGeocoder(options)\n    this.subscribeEvents()\n\n    if (containerNode) {\n      containerNode.appendChild(this.geocoder.onAdd(mapboxMap))\n    } else {\n      mapboxMap.addControl(this.geocoder, VALID_POSITIONS.find((_position) => position === _position))\n    }\n\n    if (inputValue !== undefined && inputValue !== null) {\n      this.geocoder.setInput(inputValue)\n    } else if (this.cachedResult) {\n      this.geocoder.setInput(this.cachedResult.place_name)\n    }\n\n    if (this.cachedResult || (inputValue !== undefined && inputValue !== null)) {\n      this.showClearIcon()\n    }\n\n    onInit(this.geocoder)\n  }\n\n  showClearIcon = () => {\n    // this is a hack to force clear icon to show if there is text in the input\n    this.geocoder._clearEl.style.display = 'block'\n  }\n\n  getMapboxMap = () => {\n    const { mapRef } = this.props\n\n    return (mapRef && mapRef.current && mapRef.current.getMap()) || null\n  }\n\n  getContainerNode = () => {\n    const { containerRef } = this.props\n\n    return (containerRef && containerRef.current) || null\n  }\n\n  subscribeEvents = () => {\n    this.geocoder.on('clear', this.handleClear)\n    this.geocoder.on('loading', this.handleLoading)\n    this.geocoder.on('results', this.handleResults)\n    this.geocoder.on('result', this.handleResult)\n    this.geocoder.on('error', this.handleError)\n  }\n\n  unsubscribeEvents = () => {\n    this.geocoder.off('clear', this.handleClear)\n    this.geocoder.off('loading', this.handleLoading)\n    this.geocoder.off('results', this.handleResults)\n    this.geocoder.off('result', this.handleResult)\n    this.geocoder.off('error', this.handleError)\n  }\n\n  removeGeocoder = () => {\n    const mapboxMap = this.getMapboxMap()\n\n    this.unsubscribeEvents()\n\n    if (mapboxMap && mapboxMap.removeControl) {\n      this.getMapboxMap().removeControl(this.geocoder)\n    }\n\n    this.geocoder = null\n  }\n\n  handleClear = () => {\n    this.cachedResult = null\n    this.props.onClear()\n  }\n\n  handleLoading = (event) => {\n    this.props.onLoading(event)\n  }\n\n  handleResults = (event) => {\n    this.props.onResults(event)\n  }\n\n  handleResult = (event) => {\n    const { result } = event\n    const { onViewportChange, onResult } = this.props\n    const { bbox, center, properties = {} } = result\n    const { short_code } = properties\n    const [longitude, latitude] = center\n    const bboxExceptions = {\n      fr: {\n        name: 'France',\n        bbox: [[-4.59235, 41.380007], [9.560016, 51.148506]]\n      },\n      us: {\n        name: 'United States',\n        bbox: [[-171.791111, 18.91619], [-66.96466, 71.357764]]\n      },\n      ru: {\n        name: 'Russia',\n        bbox: [[19.66064, 41.151416], [190.10042, 81.2504]]\n      },\n      ca: {\n        name: 'Canada',\n        bbox: [[-140.99778, 41.675105], [-52.648099, 83.23324]]\n      }\n    }\n    const { width, height } = this.getMapboxMap()\n      .getContainer()\n      .getBoundingClientRect()\n    let zoom = this.geocoder.options.zoom\n    const fitBounds = (bounds, viewport) => new WebMercatorViewport(viewport).fitBounds(bounds)\n\n    try {\n      if (!bboxExceptions[short_code] && bbox) {\n        zoom = fitBounds([[bbox[0], bbox[1]], [bbox[2], bbox[3]]], { width, height }).zoom\n      } else if (bboxExceptions[short_code]) {\n        zoom = fitBounds(bboxExceptions[short_code].bbox, { width, height }).zoom\n      }\n    } catch (e) {\n      console.warn('following result caused an error when trying to zoom to bbox: ', result) // eslint-disable-line\n      zoom = this.geocoder.options.zoom\n    }\n\n    onViewportChange({\n      longitude,\n      latitude,\n      zoom,\n      transitionInterpolator: new FlyToInterpolator(),\n      transitionDuration: 3000\n    })\n    onResult(event)\n\n    this.cachedResult = result\n    this.geocoder._typeahead.selected = null\n    this.showClearIcon()\n  }\n\n  handleError = (event) => {\n    this.props.onError(event)\n  }\n\n  getGeocoder() {\n    return this.geocoder\n  }\n\n  render() {\n    return null\n  }\n\n  static propTypes = {\n    mapRef: PropTypes.object.isRequired,\n    containerRef: PropTypes.object,\n    onViewportChange: PropTypes.func,\n    mapboxApiAccessToken: PropTypes.string.isRequired,\n    inputValue: PropTypes.string,\n    origin: PropTypes.string,\n    zoom: PropTypes.number,\n    placeholder: PropTypes.string,\n    proximity: PropTypes.object,\n    trackProximity: PropTypes.bool,\n    collapsed: PropTypes.bool,\n    clearAndBlurOnEsc: PropTypes.bool,\n    clearOnBlur: PropTypes.bool,\n    bbox: PropTypes.array,\n    types: PropTypes.string,\n    countries: PropTypes.string,\n    minLength: PropTypes.number,\n    limit: PropTypes.number,\n    language: PropTypes.string,\n    filter: PropTypes.func,\n    localGeocoder: PropTypes.func,\n    reverseGeocode: PropTypes.bool,\n    enableEventLogging: PropTypes.bool,\n    marker: PropTypes.bool,\n    render: PropTypes.func,\n    getItemValue: PropTypes.func,\n    position: PropTypes.oneOf(VALID_POSITIONS),\n    onInit: PropTypes.func,\n    onClear: PropTypes.func,\n    onLoading: PropTypes.func,\n    onResults: PropTypes.func,\n    onResult: PropTypes.func,\n    onError: PropTypes.func\n  }\n\n  static defaultProps = {\n    onViewportChange: () => {},\n    origin: 'https://api.mapbox.com',\n    zoom: 16,\n    placeholder: 'Search',\n    trackProximity: false,\n    collapsed: false,\n    clearAndBlurOnEsc: false,\n    clearOnBlur: false,\n    minLength: 2,\n    limit: 5,\n    reverseGeocode: false,\n    enableEventLogging: true,\n    marker: true,\n    position: 'top-right',\n    onInit: () => {},\n    onClear: () => {},\n    onLoading: () => {},\n    onResults: () => {},\n    onResult: () => {},\n    onError: () => {}\n  }\n}\n\nexport default Geocoder\n"]},"metadata":{},"sourceType":"module"}